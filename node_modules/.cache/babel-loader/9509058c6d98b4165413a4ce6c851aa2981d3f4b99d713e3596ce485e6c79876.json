{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\61451\\\\Downloads\\\\nd0191-c2-React-Redux-project-starter-main\\\\nd0191-c2-React-Redux-project-starter-main\\\\poll\\\\src\\\\components\\\\NewQuestion.js\",\n  _s2 = $RefreshSig$();\nimport { connect } from 'react-redux';\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { handleSaveAnswer } from '../actions/questions';\nimport { useEffect } from 'react';\nimport Login from \"./Login\";\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst withRouter = Component => {\n  var _s = $RefreshSig$();\n  const ComponentWithRouterProps = props => {\n    _s();\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  };\n  _s(ComponentWithRouterProps, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n  return ComponentWithRouterProps;\n};\nconst NewQuestion = props => {\n  _s2();\n  // // const navigate=useNavigate();\n  // // const {legit}=props;\n\n  //     if (!legit) {\n  //         console.log(\"error\");\n  //         navigate(\"/new\");\n  //         return null;\n  //     }\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    questions,\n    users\n  } = props;\n  const question = questions[id];\n\n  //Navigate to not found page if question is null\n  if (!question) {\n    navigate(\"/app/error\");\n    return null;\n  }\n  const {\n    authedUser\n  } = props;\n  if (!authedUser) {\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    dispatch,\n    optionOneText,\n    optionTwoText\n  } = props;\n  const {\n    author\n  } = props.question;\n  const handleAnswer = (e, a) => {\n    e.preventDefault();\n    dispatch(handleSaveAnswer({\n      authedUser,\n      qid: id,\n      answer: a\n    }));\n    navigate(\"/app\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Poll by \", author, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: e => handleAnswer(e, 'optionOne'),\n      children: optionOneText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: e => handleAnswer(e, 'optionTwo'),\n      children: optionTwoText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n// const mapStateToProps=({authedUser,questions},props)=>{\n//     let legit=true;\n//     const{id}=props.router.params;\n\n//     if(!Object.keys(questions).includes(id)){\n//         legit=false;\n//         return{legit,}\n\n//     }\n\n//     const question=questions[id];\n//     const optionOneText=question.optionOne['text'];\n//     const optionTwoText=question.optionTwo['text'];\n\n//     return{\n//         authedUser,\n//         legit,\n//         id, \n//        question,\n//        authedUser,\n//        optionOneText,\n//        optionTwoText\n\n//     }\n// }\n_s2(NewQuestion, \"1JEIvPRIKJKnaO45RHf/GR9vcR4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NewQuestion;\nconst mapStateToProps = ({\n  questions,\n  authedUser,\n  users\n}) => {\n  return {\n    questions,\n    authedUser,\n    users\n  };\n};\nexport default withRouter(connect(mapStateToProps)(NewQuestion));\nvar _c;\n$RefreshReg$(_c, \"NewQuestion\");","map":{"version":3,"names":["connect","useLocation","useNavigate","useParams","handleSaveAnswer","useEffect","Login","Error","jsxDEV","_jsxDEV","withRouter","Component","_s","$RefreshSig$","ComponentWithRouterProps","props","location","navigate","params","router","fileName","_jsxFileName","lineNumber","columnNumber","NewQuestion","_s2","id","questions","users","question","authedUser","dispatch","optionOneText","optionTwoText","author","handleAnswer","e","a","preventDefault","qid","answer","children","onClick","_c","mapStateToProps","$RefreshReg$"],"sources":["C:/Users/61451/Downloads/nd0191-c2-React-Redux-project-starter-main/nd0191-c2-React-Redux-project-starter-main/poll/src/components/NewQuestion.js"],"sourcesContent":["import { connect } from 'react-redux';\r\nimport { useLocation,useNavigate,useParams } from \"react-router-dom\";\r\nimport { handleSaveAnswer } from '../actions/questions';\r\nimport { useEffect } from 'react';\r\nimport Login from \"./Login\";\r\nimport Error from './Error';\r\nconst withRouter=(Component)=>{\r\n    const ComponentWithRouterProps=(props)=>{\r\n        let location=useLocation();\r\n        let navigate=useNavigate();\r\n        let params=useParams();\r\n        return <Component {...props} router={{location,navigate,params}}/>\r\n    };\r\n    return ComponentWithRouterProps;\r\n}\r\n\r\nconst NewQuestion=(props)=>{\r\n    // // const navigate=useNavigate();\r\n    // // const {legit}=props;\r\n\r\n   \r\n  \r\n    //     if (!legit) {\r\n    //         console.log(\"error\");\r\n    //         navigate(\"/new\");\r\n    //         return null;\r\n    //     }\r\n    const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const { questions, users } = props;\r\n  const question = questions[id];\r\n\r\n  //Navigate to not found page if question is null\r\n  if (!question) {\r\n    navigate(\"/app/error\");\r\n    return null;\r\n  }\r\n\r\n    const{authedUser}=props;\r\n  if(!authedUser){\r\n    return <Login/>;\r\n  }\r\n    \r\n    \r\n    const{dispatch,optionOneText,optionTwoText}=props;\r\n    const{author}=props.question;\r\n    const handleAnswer=(e,a)=>{\r\n        e.preventDefault();\r\n        \r\n        dispatch(\r\n            handleSaveAnswer({\r\n                authedUser, \r\n                qid:id, \r\n                answer:a,\r\n            })\r\n        );\r\n        navigate(\"/app\");\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Poll by {author} </h1>\r\n            <li onClick={(e)=>handleAnswer(e,'optionOne')}>{optionOneText}</li>\r\n            <li onClick={(e)=>handleAnswer(e,'optionTwo')}>{optionTwoText}</li>\r\n        </div>\r\n    )\r\n};\r\n// const mapStateToProps=({authedUser,questions},props)=>{\r\n//     let legit=true;\r\n//     const{id}=props.router.params;\r\n    \r\n    \r\n//     if(!Object.keys(questions).includes(id)){\r\n//         legit=false;\r\n//         return{legit,}\r\n     \r\n//     }\r\n \r\n   \r\n//     const question=questions[id];\r\n//     const optionOneText=question.optionOne['text'];\r\n//     const optionTwoText=question.optionTwo['text'];\r\n\r\n//     return{\r\n//         authedUser,\r\n//         legit,\r\n//         id, \r\n//        question,\r\n//        authedUser,\r\n//        optionOneText,\r\n//        optionTwoText\r\n\r\n\r\n//     }\r\n// }\r\nconst mapStateToProps = ({ questions, authedUser, users }) => {\r\n    return {\r\n      questions,\r\n      authedUser,\r\n      users,\r\n    };\r\n  };\r\nexport default withRouter(connect(mapStateToProps)(NewQuestion));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}